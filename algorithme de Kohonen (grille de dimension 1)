source("C:/Users/User/OneDrive/Documents/books/euria/algorithme de kohonen/initialisation des paramétres.R")

#topologie du réseau_grille de dimension 1 (une ligne)
n=100 #nombre de neurons
l=10  #l'espace des données [0,l]*[0,l]

#initialisation aléatoire des vecteurs référents
w=array(dim=c(n,2))
for (i in 1:n){
  for (j in 1:2){
    w[i,j]=runif(1,min=0,max=l)
  } 
}

#on visualise les vecteurs référents
plot(w[, 1], w[, 2],col='red',pch=19, xlab = "axe des x",ylab = "axe des y",xlim =c(0,l),ylim = c(0,l),main = "l'espace des données")
lines(w[, 1], w[, 2], col = "blue")

#algorithme de Kohonen
for (t in 1:M){
  p=runif(2,min=0,max=l) #on génére un vecteur aléatoire dans l'espace des données
  #phase de compétition
  dist=sapply(1:n,function(i) d(p,w[i,]))
  argmin=which.min(dist) #le neuron gagnant
  #phase de coopération
  for(k in 1:n){
    w[k,]=w[k,]+eps(t)*lambda(argmin,k,t)*(p-w[k,])  #les neurons sont déterminés par leurs indices ; on met à jour les vecteurs référents
  }
  # Affichage à chaque itération pour observer l'évolution des poids
  plot(w[, 1], w[, 2], col = "red", pch = 19,main = paste("Itération", t , "de l'algorithme"),xlab = "Axe X", ylab = "Axe Y", xlim = c(0,l), ylim = c(0,l))
  lines(w[, 1], w[, 2], col = "blue")
  Sys.sleep(0.05)
}


